CREATE TABLE public."user"
(
    id serial,
    name varchar(50),
    age integer,
    PRIMARY KEY (id)
);

CREATE TABLE public."test2_tbl"
(
    id serial,
    name varchar(50),
    age integer,
	time_stamp timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    PRIMARY KEY (id)
);

Insert Into public."test_tbl" (name,age) values ('test name2',23);



create table public."organization_tbl"
(
	id serial,
	org_name varchar(50),
	org_code varchar(10),
	timestamp timestamp with time zone not null default (current_timestamp at time zone 'UTC'),
	status int default 1
);

insert into public."organization_tbl" (org_name,org_code) values ("test_org1", "TORG_1");

select * from public."organization_tbl";

create table public."user_tbl"
(
	id serial,
	username varchar(20),
	password varchar(50),
	org_code varchar(10),
	timestamp timestamp with time zone not null default (current_timestamp at time zone 'UTC'),
	status int default 1
);

create table API_tbl
(
	id serial,
	DT_ID varchar(20),
	URL varchar(50),
	description text,
	type varchar(10),
	sample_json text,
	user_auth_token text,
	timestamp timestamp with time zone not null default (current_timestamp at time zone 'UTC'),
	status int default 1
);

insert into API_tbl (DT_ID,URL,description,type,sample_json,user_auth_token ) 
values ('DT1','127.0.0.1/send','test DT server','GET','{message : text}','');

select * from API_tbl;


create table DT_tbl
(
	id serial,
	org_code varchar(50),
	DT_code varchar(50),
	DT_name varchar(50),
	DT_description text,
	timestamp timestamp with time zone not null default (current_timestamp at time zone 'UTC'),
	status int default 1
);

insert into DT_tbl (org_code,DT_code,DT_name,DT_description) values ('TORG_1','DT_2','Sample DT 2','Sample DT description 2 ') returning id;

create table api_security_check_tbl
(
	id serial,
	DT_ID int,
	API_ID int,
	scan_id varchar(50),
	low_count int,
	mid_count int,
	high_count int,
	report text,
	timestamp timestamp with time zone not null default (current_timestamp at time zone 'UTC'),
	status int default 1
);

insert into api_security_check_tbl (DT_ID,API_ID,scan_id) values (1,1,'text_scan_ID');

update api_security_check_tbl set low_count=2,mid_count=1,high_count=0,timestamp=current_timestamp at time zone 'UTC' where id = 1;

select * from api_tbl order by id desc limit 5;

select * from api_security_check_tbl;

select * from api_security_check_tbl where low_count is NULL and mid_count is null and high_count is null;

select dt_tbl.org_code,dt_tbl.dt_code,dt_tbl.dt_name,sum(api_security_check_tbl.low_count) as low_sum,sum(api_security_check_tbl.mid_count) as mid_sum,sum(api_security_check_tbl.high_count) as high_sum from dt_tbl join api_security_check_tbl on dt_tbl.id = dt_id group by dt_tbl.org_code,dt_tbl.dt_code,dt_tbl.dt_name; 

select * from api_security_check_tbl where (low_count is NULL and mid_count is null and high_count is null) or (low_count = 0 and mid_count = 0 and high_count = 0) ;


insert into api_qos_tbl (DT_ID,API_ID,test_count) values (1,2,0); 

truncate table api_qos_tbl;

select api_tbl.dt_id,api_qos_tbl.api_id,api_tbl.url,api_tbl.type,api_tbl.sample_json,api_tbl.user_auth_token
from api_tbl
join api_qos_tbl on api_tbl.id = API_ID
where api_qos_tbl.test_count = 0;

ALTER TABLE api_tbl ALTER COLUMN dt_id TYPE integer USING (trim(dt_id)::integer);

select backup_service_locations_tbl.ip as backup_ip,api_tbl.dt_id,api_qos_tbl.api_id,api_tbl.url,api_tbl.type,api_tbl.sample_json,api_tbl.user_auth_token
from backup_service_locations_tbl
inner join api_qos_tbl on api_qos_tbl.dt_id = backup_service_locations_tbl.dt_id
inner join api_tbl on api_tbl.dt_id = api_qos_tbl.dt_id
where api_qos_tbl.test_count=1;

#get unique values
select distinct api_tbl.id as api_id, api_tbl.dt_id, backup_service_locations_tbl.ip as backup_ip,api_tbl.url,api_tbl.type,api_tbl.sample_json,api_tbl.user_auth_token
from backup_service_locations_tbl
inner join api_qos_tbl on api_qos_tbl.dt_id = backup_service_locations_tbl.dt_id
inner join api_tbl on api_tbl.dt_id = api_qos_tbl.dt_id
where api_qos_tbl.test_count=1
order by api_tbl.id;

### truncate and restart tables
TRUNCATE api_qos_records_tbl,api_qos_tbl,api_security_check_tbl,api_tbl,backup_qos_records_tbl,backup_qos_tbl,backup_service_locations_tbl,dt_tbl,dttsa_evaluation_config_tbl RESTART IDENTITY;

### get sub count
select sub_dt_id,count(sub_dt_id) from dt_sub_tbl group by sub_dt_id;

### cloud useful 
select distinct dt_id,dt_type,dt_type_predict from dt_type_tbl where dt_type_predict is not null and status=-15 order by dt_id asc;

select distinct dt_id,dt_type,dt_type_predict,status from dt_type_tbl where dt_type_predict is not null and dt_type != dt_type_predict order by dt_id asc;


select distinct status from dt_type_tbl;

select * from dttsa_execution_status_tbl where status = -1 and function_name like 'QoS_%' order by timestamp asc;

select * from dttsa_execution_status_tbl where status = -2 and function_name = 'QoS_pm' order by timestamp asc;

select * from dttsa_execution_status_tbl where status = -4 and function_name = 'QoS_n' order by timestamp asc;

select timestamp,completed_timestamp from api_security_check_tbl where status = -4 order by timestamp asc;
select timestamp,completed_timestamp from api_security_check_tbl where status = -4 order by completed_timestamp desc;

select * from api_security_check_tbl where timestamp != completed_timestamp and status = -4;

select * from dttsa_trust_calculations_tbl where category = 'Backup QoS' and dt_id=15;

select * from dttsa_trust_calculations_tbl where dt_id=15 and status=-5;
select * from api_qos_records_tbl where status=-5 and dt_id=2;

select * from backup_qos_records_tbl;

--- recent use
select distinct dt_id,dt_type,dt_type_predict from dt_type_tbl where dt_type_predict is not null and status=-10 order by dt_id asc;

select distinct dt_id,dt_type,dt_type_predict,status from dt_type_tbl where dt_type_predict is not null and dt_type != dt_type_predict order by dt_id asc;


select distinct status from dt_type_tbl;

select * from dttsa_execution_status_tbl where status = -1 and function_name like 'QoS_%' order by timestamp asc;

select * from dttsa_execution_status_tbl where status = -2 and function_name = 'QoS_pm' order by timestamp asc;

select * from dttsa_execution_status_tbl where status = -4 and function_name = 'QoS_n' order by timestamp asc;

select timestamp,completed_timestamp from api_security_check_tbl where status = -4 order by timestamp asc;
select timestamp,completed_timestamp from api_security_check_tbl where status = -4 order by completed_timestamp desc;

select * from api_security_check_tbl where timestamp != completed_timestamp and status = -4;

select * from dttsa_trust_calculations_tbl where category = 'Backup QoS' and dt_id=15;

select * from dttsa_trust_calculations_tbl where dt_id=15 and status=-5;
select * from api_qos_records_tbl where status=-5 and dt_id=2;

select * from backup_qos_records_tbl;



select distinct dt_id,dt_type,dt_type_predict from dt_type_tbl where dt_type_predict is not null and status=-10 order by dt_id asc;

select distinct dt_id,dt_type,dt_type_predict,status from dt_type_tbl where dt_type_predict is not null and status=-1 order by dt_id asc;


select distinct dt_id,dt_type,dt_type_predict,status from dt_type_tbl where dt_type_predict is not null and dt_id=1 order by status desc;


select distinct dt_id,dt_type,dt_type_predict,status from dt_type_tbl where dt_type_predict is not null and dt_type != dt_type_predict order by dt_id asc;

select distinct dt_id,dt_type,dt_type_predict,status from dt_type_tbl where dt_type_predict is not null order by status asc;
select distinct dt_id,dt_type,dt_type_predict,status from dt_type_tbl where dt_id=8 order by status asc; 
select * from dttsa_execution_status_tbl where status = -1 and function_name like 'QoS_%' order by timestamp asc;

select * from dttsa_execution_status_tbl where status = -2 and function_name = 'QoS_pm' order by timestamp asc;

select * from dttsa_execution_status_tbl where status = -4 and function_name = 'QoS_n' order by timestamp asc;

select timestamp,completed_timestamp from api_security_check_tbl where status = -4 order by timestamp asc;
select timestamp,completed_timestamp from api_security_check_tbl where status = -4 order by completed_timestamp desc;

select * from api_security_check_tbl where timestamp != completed_timestamp and status = -4;
j

select * from dttsa_trust_calculations_tbl where category = 'Backup QoS' and dt_id=15;

select * from dttsa_trust_calculations_tbl where dt_id=1 order by status desc; and status=-1;
select * from api_qos_records_tbl where status=-3 and dt_id=1;

select * from backup_qos_records_tbl;

select * from dt_tbl;

select * from dt_sub_tbl;

select * from dt_data_submission_tbl where dt_id=2 and sub_dt_id=1;
select * from dt_data_submission_tbl where sub_dt_id=2 and dt_id !=2;
select distinct dt_id from dt_data_submission_tbl where sub_dt_id=1 and data_type='QoS';
select min(avg) from dt_data_submission_tbl where sub_dt_id=1 and data_type='QoS' and status=-1;
select max(avg) from dt_data_submission_tbl where sub_dt_id=1 and data_type='QoS' and status=-1;
select avg(avg) from dt_data_submission_tbl where sub_dt_id=1 and data_type='QoS' and status=-1;
select avg  from dt_data_submission_tbl where sub_dt_id=1 and dt_id=2 and data_type='QoS'; and status=-1;

select min(time_per_req_mean) from api_qos_records_tbl where status=-1 and dt_id=1;
select max(time_per_req_mean) from api_qos_records_tbl where status=-1 and dt_id=1;
select avg(time_per_req_mean) from api_qos_records_tbl where status=-1 and dt_id=1;

select * from dt_data_submission_tbl where data_type='QoS' and sub_dt_id=2 and status=1;

select * from dttsa_dt_values_impact_categories_tbl where status = 1  and dt_id=3 and sub_dt_id=2 order by sub_dt_id;

select * from reputation_attack_log_tbl;
select * from dttsa_trust_calculations_tbl where status =-1 order by dt_id;

select * from reputation_attack_possibilities;
select * from dt_tbl;
select * from dt_sub_tbl where sub_dt_id=2;
select distinct dt_id from dt_sub_tbl where sub_dt_id = 1 and type !='POST' union select distinct sub_dt_id from dt_sub_tbl where dt_id = 1 and type='POST';
select dt_id,sub_dt_id,dt_impact_prediction,count(dt_impact_prediction) as hit_count from dttsa_dt_values_impact_categories_tbl where status = -2 and category='QoS' and sub_dt_id=1 group by dt_id,sub_dt_id,dt_impact_prediction order by hit_count desc;
select * from dttsa_trust_calculations_tbl where status =-2 and dt_id=1 and category='DTTSA QoS'; 

select dt_id,attacked_dt,count(attacked_dt) from reputation_attack_possibilities group by dt_id,attacked_dt;















